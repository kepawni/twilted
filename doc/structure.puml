@startuml
hide empty members
package \ <<internal>> {
    interface IteratorAggregate
    interface DateTimeInterface
}
package Kepawni\Twilted {
    abstract AggregateRoot {
        {abstract} #apply(:DomainEvent):void
        {abstract} #recordThat(:EventPayload):void
    }
    interface DataCarrier {
        +getPayload():EventPayload
    }
    interface DomainEvent
    interface EntityHistory
    interface EntityIdentifier
    interface EntityReference {
        +getId():EntityIdentifier
    }
    interface Equatable {
        +equals(:mixed):bool
    }
    interface EventBus {
        +dispatch(:EventStream):void
    }
    interface EventPayload
    interface EventSourcedEntity {
        {static} +reconstituteFrom(:EntityHistory):EventSourcedEntity
        +getRecordedEvents():EventStream
    }
    interface EventStore {
        +append(:EventStream):void
        +retrieve(:EntityIdentifier):EventStream
    }
    interface EventStream {
        +getIterator():Traversable<DomainEvent>
    }
    interface Foldable {
        {static} +unfold(:string):Foldable
        +fold():string
    }
    interface IdentifiableEventSourceEntity
    interface Recordable {
        +getRecordedOn():DateTimeInterface
    }
    interface Repository {
        +load(:EntityIdentifier):EventSourcedEntity
        +save(:IdentifiableEventSourceEntity):void
    }
    interface Windable {
        {static} +unwind(:array):Windable
        +windUp():array
    }
    IdentifiableEventSourceEntity ^.. AggregateRoot
    DataCarrier ^-- DomainEvent
    EntityReference ^-- DomainEvent
    Recordable ^-- DomainEvent
    EntityReference ^-- EntityHistory
    EventStream ^-- EntityHistory
    Equatable ^-- EntityIdentifier
    Foldable ^-- EntityIdentifier
    Equatable ^-- EventPayload
    Windable ^-- EventPayload
    IteratorAggregate ^-- EventStream
    EntityReference ^-- IdentifiableEventSourceEntity
    EventSourcedEntity ^-- IdentifiableEventSourceEntity

    EventPayload <--o DataCarrier
    EntityIdentifier <--o EntityReference
    EventStream <--o EventSourcedEntity
    DomainEvent <--o EventStream
    DateTimeInterface <--o Recordable
    EventSourcedEntity <-- Repository
    DomainEvent <.. AggregateRoot
    EventPayload <.. AggregateRoot
    EventStream <... EventBus
    EntityHistory <.. EventSourcedEntity
    EntityIdentifier <... EventStore
    EventStream <.. EventStore
    EntityIdentifier <.. Repository
    IdentifiableEventSourceEntity <.. Repository

    DateTimeInterface -[hidden]- IteratorAggregate
}
@enduml
